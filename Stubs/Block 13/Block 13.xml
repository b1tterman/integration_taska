<?xml version="1.0" encoding="UTF-8"?>

<!--Generated by CTT Stubs Editor 17.05.22 18:07-->
<stubRest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ctt.cinimex.ru/stubRest.xsd" endpoint="localhost" port="9065" requestEncoding="UTF-8" responseEncoding="UTF-8" name="Block 13" language="groovy" theadPoolSize="20" secret="false">
  <logConfig level="ALL" writeMessages="true" memoryStore="false"/>
  <method name="POST">
    <request>
      <content><![CDATA[]]></content>
    </request>
    <response name="json"><![CDATA[{
     "BankClients":[
        {
           "ClientId":${id},
           "ClientName":"${name}",
           "Currency":"${currency}",
           "CurrencyCode":${code}
        }
     ]
  }]]></response>
    <script name="post" type="main"><![CDATA[import javax.servlet.http.HttpServletRequest;
import com.thetransactioncompany.jsonrpc2.*; 
import ru.cinimex.stub.infrastructure.env.var.TemplateVariable;
import ru.cinimex.stub.infrastructure.groovy.env.var.impl.request.RequestVariable;
import ru.cinimex.stub.utils.JSON;


RequestVariable request = contextRequest.getRequest();
HttpServletRequest httpRequest = request.getNativeMessage();
log.info("HTTPS: " + httpRequest.isSecure());
header = contextRequest.getTransportHeader("Content-Type");


switch (header) {
//часть скрипта для обработки Json

	case "text/json; charset=Windows-1251":
		itsJson = JSON.isJSONValid(request.getBody());
		switch(itsJson)
		{case true:
				String json_client_id = JSON.readJsonValue(request.toString(), "\$.getBankClient.BankClient.ClientId").toString();     
				java.util.Map<String, Object> headers = new java.util.HashMap<String, Object>();
				headers.put("Content-Type", "text/json; charset=Windows-1251");
				contextResponse.setTransportHeaders(headers); 	
				switch(json_client_id)
				{case "8":
						response=contextResponse.getTemplate("json id 8");
						contextResponse.setHttpStatusCode(200);
						break;
				case "15":
						response=contextResponse.getTemplate("json id 15");
						contextResponse.setHttpStatusCode(200);
						break;
				case "20":
						response=contextResponse.getTemplate("json id 20");
						contextResponse.setHttpStatusCode(200);
						break;
				default:
						response=contextResponse.getTemplate("default");
						contextResponse.setHttpStatusCode(204);
						break;
				}
				return response;
// если внутри оказался не JSON, то отправляем код 400
		default:
				response=contextResponse.getTemplate("default");
				contextResponse.setHttpStatusCode(400);
				break;		
		}
	return response;
// если header не xml и не json - отправляем код 501
	default:
			response=contextResponse.getTemplate("default");
			contextResponse.setHttpStatusCode(501);
			break;
}
return response;	
]]></script>
  </method>
</stubRest>
