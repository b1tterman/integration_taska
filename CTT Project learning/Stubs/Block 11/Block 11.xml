<?xml version="1.0" encoding="UTF-8"?>

<!--Generated by CTT Stubs Editor 25.04.22 18:11-->
<stubRest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ctt.cinimex.ru/stubRest.xsd" endpoint="localhost" port="9065" requestEncoding="windows-1251" responseEncoding="windows-1251" name="Block 11" language="groovy" theadPoolSize="20" secret="false">
  <security> 
    <ssl needClientsAuthentication="true" port="9064"> 
      <KeyStore password="qwerty123" path="Keys\keystore.jks" type="JKS"/>  
      <TrustStore password="qwerty123" path="Keys\truststore.jks" type="JKS"/> 
    </ssl> 
  </security>
  <mnemonics>
    <MnemonicsPath>Mnemonics/Xpath/mnem.txt</MnemonicsPath>
  </mnemonics>
  <logConfig level="ALL" writeMessages="true" memoryStore="false"/>
  <method name="POST">
    <request>
      <content><![CDATA[]]></content>
    </request>
    <response name="xml id 15"><![CDATA[<?xml version="1.0" encoding="Windows-1251"?>  
  <BankClients>
     <BankClient>
        <ClientId>15</ClientId>
        <ClientName>Петров</ClientName>
        <CurrencyCode>812</CurrencyCode>
        <Currency>USD</Currency>
     </BankClient>
  </BankClients>]]></response>
    <response name="xml id 20"><![CDATA[<?xml version="1.0" encoding="Windows-1251"?>  
  <BankClients>
     <BankClient>
        <ClientId>20</ClientId>
        <ClientName>Николаев</ClientName>
        <CurrencyCode>978</CurrencyCode>
        <Currency>EUR</Currency>
     </BankClient>
  </BankClients>]]></response>
    <response name="xml id 8"><![CDATA[<?xml version="1.0" encoding="Windows-1251"?>  
  <BankClients>
     <BankClient>
        <ClientId>8</ClientId>
        <ClientName>Васильев</ClientName>
        <CurrencyCode>643</CurrencyCode>
        <Currency>RUB</Currency>
     </BankClient>
  </BankClients>]]></response>
    <response name="json id 15"><![CDATA[ {
     "BankClients":[
        {
           "ClientId":15,
           "ClientName":"Петров",
           "Currency":"USD",
           "CurrencyCode":812
        }
     ]
  }]]></response>
    <response name="json id 20"><![CDATA[ {
     "BankClients":[
        {
           "ClientId":20,
           "ClientName":"Николаев",
           "Currency":"EUR",
           "CurrencyCode":987
        }
     ]
  }]]></response>
    <response name="json id 8"><![CDATA[ {
     "BankClients":[
        {
           "ClientId":8,
           "ClientName":"Васильев",
           "Currency":"RUB",
           "CurrencyCode":643
        }
     ]
  }]]></response>
    <response name="default"><![CDATA[Hello Cinimex! Something wrong!]]></response>
    <script name="post" type="main"><![CDATA[import javax.servlet.http.HttpServletRequest;
import groovy.util.XmlSlurper;
import groovy.xml.MarkupBuilder;
import com.thetransactioncompany.jsonrpc2.*; 
import ru.cinimex.stub.infrastructure.env.var.TemplateVariable;
import ru.cinimex.stub.infrastructure.groovy.env.var.impl.request.RequestVariable;
import ru.cinimex.stub.utils.JSON;
import ru.cinimex.stub.utils.XML;
import com.jayway.jsonpath.PathNotFoundException;



request = contextRequest.getRequest();
header = contextRequest.getTransportHeader("Content-Type");


//часть скрипта для обработки XML
if (header == "text/xml; charset=Windows-1251")
{

clientId = request.evalXpathStr("/*[local-name()='getBankClient']/*[local-name()='BankClient']/*[local-name()='ClientId']/text()");
log.info("clientid: " + clientId);

java.util.Map<String, Object> headers = new java.util.HashMap<String, Object>();
headers.put("Content-Type", "text/xml; charset=Windows-1251");
contextResponse.setTransportHeaders(headers); 

if (clientId == "8")
	{response=contextResponse.getTemplate("xml id 8");
	contextResponse.setHttpStatusCode(200);}
else if (clientId == "15")
	{response=contextResponse.getTemplate("xml id 15");
	contextResponse.setHttpStatusCode(200);}
else if (clientId == "20")
	{response=contextResponse.getTemplate("xml id 20");
	contextResponse.setHttpStatusCode(200);}
else {response=contextResponse.getTemplate("default");
	contextResponse.setHttpStatusCode(204);}
return response;}


//часть скрипта для обработки JSON
else if (header == "text/json; charset=Windows-1251")
	{   itsJson = JSON.isJSONValid(request.getBody());
        
    if (itsJson){ 
    String json_client_id = JSON.readJsonValue(request.toString(), "\$.getBankClient.BankClient.ClientId").toString();     
	java.util.Map<String, Object> headers = new java.util.HashMap<String, Object>();
	headers.put("Content-Type", "text/json; charset=Windows-1251");
	contextResponse.setTransportHeaders(headers); 
    
    if (json_client_id == "8")
    {response=contextResponse.getTemplate("json id 8");
	contextResponse.setHttpStatusCode(200);}
	else if (json_client_id == "15")
    {response=contextResponse.getTemplate("json id 15");
	contextResponse.setHttpStatusCode(200);}
	else if (json_client_id == "20")
    {response=contextResponse.getTemplate("json id 20");
	contextResponse.setHttpStatusCode(200);}
    else {response=contextResponse.getTemplate("default");
	contextResponse.setHttpStatusCode(204);}
	}    
    else  {response=contextResponse.getTemplate("default");
	contextResponse.setHttpStatusCode(400);}
    return response;
}
//если header не json и не xml
else 
{	response=contextResponse.getTemplate("default");
	contextResponse.setHttpStatusCode(501);
	return response;
}]]></script>
  </method>
</stubRest>
