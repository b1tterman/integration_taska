<?xml version="1.0" encoding="UTF-8"?>

<!--Generated by CTT Stubs Editor 06.05.22 11:31-->
<stubRest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ctt.cinimex.ru/stubRest.xsd" endpoint="localhost" port="9065" requestEncoding="windows-1251" responseEncoding="windows-1251" name="Block 12" language="groovy" theadPoolSize="20" secret="false">
  <security> 
    <ssl needClientsAuthentication="true" port="9064"> 
      <KeyStore password="qwerty123" path="Keys\keystore.jks" type="JKS"/>  
      <TrustStore password="qwerty123" path="Keys\truststore.jks" type="JKS"/> 
    </ssl> 
  </security>
  <mnemonics>
    <MnemonicsPath>Mnemonics/Xpath/mnem.txt</MnemonicsPath>
  </mnemonics>
  <addToClassloader>
    <file>Lib/mysql-connector-java-8.0.29.jar</file>
  </addToClassloader>
  <logConfig level="ALL" writeMessages="true" memoryStore="false"/>
  <method name="DELETE">
    <request>
      <content><![CDATA[]]></content>
    </request>
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>
    <script name="delete" type="main"><![CDATA[response=contextResponse.getTemplate("default");
contextResponse.setHttpStatusCode(405);
return response;	]]></script>
  </method>
  <method name="GET"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <response name="xml"><![CDATA[]]></response>  
    <response name="json"><![CDATA[]]></response>  
    <script name="get" type="main"><![CDATA[]]></script> 
  </method>
  <method name="HEAD"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <script name="head" type="main"><![CDATA[response=contextResponse.getTemplate("default");
contextResponse.setHttpStatusCode(405);
return response;	]]></script> 
  </method>
  <method name="OPTIONS"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <script name="options" type="main"><![CDATA[response=contextResponse.getTemplate("default");
contextResponse.setHttpStatusCode(405);
return response;	]]></script> 
  </method>
  <method name="PATCH"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <script name="patch" type="main"><![CDATA[response=contextResponse.getTemplate("default");
contextResponse.setHttpStatusCode(405);
return response;	]]></script> 
  </method>
  <method name="POST">
    <request>
      <content><![CDATA[]]></content>
    </request>
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>
    <response name="xml_resp"><![CDATA[<?xml version="1.0" encoding="Windows-1251"?>
  <BankClients>
     <BankClient>
        <ClientId>${id}</ClientId>
        <ClientName>${name}</ClientName>
        <CurrencyCode>${code}</CurrencyCode>
        <Currency>${currency}</Currency>
     </BankClient>
  </BankClients>]]></response>
    <response name="json_resp"><![CDATA[{
     "BankClients":[
        {
           "ClientId":${id},
           "ClientName":"${name}",
           "Currency":"${currency}",
           "CurrencyCode":${code}
        }
     ]
  }]]></response>
    <script name="post" type="main"><![CDATA[import javax.servlet.http.HttpServletRequest;
import groovy.util.XmlSlurper;
import groovy.xml.MarkupBuilder;
import com.thetransactioncompany.jsonrpc2.*; 
import ru.cinimex.stub.infrastructure.env.var.TemplateVariable;
import ru.cinimex.stub.infrastructure.groovy.env.var.impl.request.RequestVariable;
import ru.cinimex.stub.utils.JSON;
import ru.cinimex.stub.utils.XML;
import ru.cinimex.stub.utils.DB;
import ru.cinimex.stub.utils.Service;

Service.loadProjectExtraSettings(new File(projectDirectory.getCanonicalPath()),  "Results/extra.settings");

RequestVariable request = contextRequest.getRequest();
HttpServletRequest httpRequest = request.getNativeMessage();
log.info("HTTPS: " + httpRequest.isSecure());
header = contextRequest.getTransportHeader("Content-Type");


//часть скрипта для обработки XML

switch (header) {
	case "text/xml; charset=Windows-1251":
		try {
			
		clientId = request.evalXpathStr("/*[local-name()='getBankClient']/*[local-name()='BankClient']/*[local-name()='ClientId']/text()");
		java.util.Map<String, Object> headers = new java.util.HashMap<String, Object>();
		headers.put("Content-Type", "text/xml; charset=Windows-1251");
		contextResponse.setTransportHeaders(headers);

		String sql = "select * from  dbikchentaev_client natural join dbikchentaev_currency where id = " + clientId;
		List<HashMap<String, Object>> req_db = DB.executeSQLSelectList("ctt", sql);
		int count = req_db.size();
		log.info("количество записей в БД: " + count);

		if (count > 0)
		//если запись в бд нашли
		
		{log.info("req_db: " + req_db[0]);
        name = req_db[0].get("name");
		id = req_db[0].get("id");
		code = req_db[0].get("code");
		currency = req_db[0].get("currency");
	
		log.info("id:  " + id + ", name:  " + name + ", currency:  " + currency+ ", code:  " + code);
			
		response=contextResponse.getTemplate("xml_resp");
		response.setParam("name", name);
		response.setParam("id", id);
		response.setParam("code", code);
		response.setParam("currency", currency);
		contextResponse.setHttpStatusCode(200);		
		break;}
		//если из бд ничего не получили
		else{		 	
		response=contextResponse.getTemplate("default");
		contextResponse.setHttpStatusCode(204);	
		break;	}
			
		} catch (Exception e) {
			response=contextResponse.getTemplate("default");
			contextResponse.setHttpStatusCode(400);	
		}
				
		return response;
	

//часть скрипта для обработки Json

	case "text/json; charset=Windows-1251":
		itsJson = JSON.isJSONValid(request.getBody());
		switch(itsJson)
		{case true:
				
				String json_client_id = JSON.readJsonValue(request.toString(), "\$.getBankClient.BankClient.ClientId").toString();     
				java.util.Map<String, Object> headers = new java.util.HashMap<String, Object>();
				headers.put("Content-Type", "text/json; charset=Windows-1251");
				contextResponse.setTransportHeaders(headers); 

				String sql = "select * from  dbikchentaev_client natural join dbikchentaev_currency where id = " + json_client_id;
				List<HashMap<String, Object>> req_db = DB.executeSQLSelectList("ctt", sql);
				int count = req_db.size();
				log.info("количество записей в БД: " + count);

				if (count > 0)
				//если запись в бд нашли
				
				{log.info("req_db: " + req_db[0]);
				name = req_db[0].get("name");
				id = req_db[0].get("id");
				code = req_db[0].get("code");
				currency = req_db[0].get("currency");
	
				log.info("id:  " + id + ", name:  " + name + ", currency:  " + currency+ ", code:  " + code);

				response=contextResponse.getTemplate("json_resp");
				response.setParam("name", name);
				response.setParam("id", id);
				response.setParam("code", code);
				response.setParam("currency", currency);
				contextResponse.setHttpStatusCode(200);}
				else {				
				response=contextResponse.getTemplate("default");
				contextResponse.setHttpStatusCode(204);	}				
				return response;
// если внутри оказался не JSON, то отправляем код 400
		default:
				response=contextResponse.getTemplate("default");
				contextResponse.setHttpStatusCode(400);
				break;		
		}
		return response;
// если header не xml и не json - отправляем код 501
	default:
			response=contextResponse.getTemplate("default");
			contextResponse.setHttpStatusCode(501);
			break;
}
return response;	
]]></script>
  </method>
  <method name="PUT"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <response name="put xml"><![CDATA[<?xml version="1.0" encoding="Windows-1251"?>
  <AddBankClient>
     <BankClient>
        <ClientName>Петров</ClientName>
        <CurrencyCode>812</CurrencyCode>
     </BankClient>
  </AddBankClient>]]></response>  
    <script name="put" type="main"><![CDATA[]]></script> 
  </method>
  <method name="TRACE"> 
    <request> 
      <content><![CDATA[]]></content> 
    </request>  
    <response name="default"><![CDATA[Hello Cinimex! Something is wrong!]]></response>  
    <script name="trace" type="main"><![CDATA[response=contextResponse.getTemplate("default");
contextResponse.setHttpStatusCode(405);
return response;	]]></script> 
  </method>
</stubRest>
