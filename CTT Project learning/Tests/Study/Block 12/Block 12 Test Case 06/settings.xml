<?xml version="1.0" encoding="UTF-8"?>

<Test xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
description="Обработка REST-заглушкой с SSL-аутентификацией POST-запроса с JSON-сообщением о существующем клиенте." 
name="Block 12 Test Case 6" xsi:noNamespaceSchemaLocation="http://ctt.cinimex.ru/testSettings.xsd">


<Log>Берем шаблон запроса и меняем id клиента</Log>
<GetTemplate path="Templates/block11msg.json" type="JSON" variable="jsonString"/> 

<ChangeJsonTemplate name="jsonString"> 
    <ReplaceValue inValue="15" jsonPath="getBankClient.BankClient.ClientId" type="Integer"/>    
</ChangeJsonTemplate> 
<Log>json: #jsonString#</Log>


<Log>Запускаем заглушку</Log>
<RunStub stubName="Block12stub"/>


<Log>Отправляем запрос в заглушку с SSL, попутно сохраняя ответ и код</Log>
<RESTSend objName="Block12ssl" operation="POST" readTimeout="20000" request="jsonString" response="response" responseCode="resp_code"> 
    <requestHeaders> 
        <header name="Content-Type" value="text/json; charset=Windows-1251"/> 
    </requestHeaders> 
    <responseHeaders> 
        <header name="Content-Type" variable="header"/> 
    </responseHeaders> 
</RESTSend> 

<Log>resp: #response#</Log>
<Log>resp code: #resp_code#</Log>

<Log>Останавливаем заглушку</Log>
<StopStub stubName="Block12stub"/>


<Log>Сравниваем полученный код ответа с ожидаемым</Log>
<Log>resp code: #resp_code#</Log>
<AssertEquals variable="resp_code" value="200"></AssertEquals>


<Log>Сравниваем полученный заголовок с ожидаемым</Log>
<Log>header: #header#</Log>
<AssertEquals variable="header" value="text/json; charset=Windows-1251"></AssertEquals>


<Log>Сравниваем тело ответа с ожидаемым</Log>
<GetTemplate variable="expected_msg" type="JSON" path="Templates\block11msgCase6.json"/>
<AssertJsonEqual expected="expected_msg" actual="response"></AssertJsonEqual>

</Test>
